# .github/workflows/ci-cd-sonarcloud.yml
name: CI/CD with SonarCloud

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    name: 🧪 Build and Test
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:6
        ports: [27017:27017]
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🧰 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📦 Install backend dependencies
        working-directory: ./backend
        run: npm install

      - name: 🧪 Run backend tests
        working-directory: ./backend
        env:
            MONGO_URL: mongodb://localhost:27017/testdb
        run: npm test || true


      - name: 📦 Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: 🏗️ Build frontend
        working-directory: ./frontend
        run: npm run build

  sonarcloud:
    name: 🔍 SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Run SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
            projectBaseDir: .
            args: >
              -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
              -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}

        env:
           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}



  docker-build-and-push:
    name: 🐳 Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: [build-and-test, sonarcloud]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔐 Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 🐳 Build Docker image
        working-directory: ./server
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/crassist:latest .

      - name: 📤 Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/crassist:latest